/*
1d/1f/21 # Base 00 - Black
cc/66/66 # Base 08 - Red
b5/bd/68 # Base 0B - Green
f0/c6/74 # Base 0A - Yellow
81/a2/be # Base 0D - Blue
b2/94/bb # Base 0E - Magenta
8a/be/b7 # Base 0C - Cyan
c5/c8/c6 # Base 05 - White
96/98/96 # Base 03 - Bright Black
$color01 # Base 08 - Bright Red
$color02 # Base 0B - Bright Green
$color03 # Base 0A - Bright Yellow
$color04 # Base 0D - Bright Blue
$color05 # Base 0E - Bright Magenta
$color06 # Base 0C - Bright Cyan
ff/ff/ff # Base 07 - Bright White
de/93/5f # Base 09
a3/68/5a # Base 0F
28/2a/2e # Base 01
37/3b/41 # Base 02
b4/b7/b4 # Base 04
e0/e0/e0 # Base 06
c5/c8/c6 # Base 05
1d/1f/21 # Base 00
*/

body {
  margin 0;
  background-color: #1d1f21;
}

#term {
  background-color: #1d1f21;
  height: 100vh;
  margin: 0;
  overflow: hidden;
  padding: 2rem;
  color: #c5c8c6;
  font: 1.3rem Inconsolata, monospace;
  text-shadow: 0 0 5px #C8C8C8;
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 20vw;
    height: 80vh;
    background: repeating-linear-gradient(
      0deg,
      rgba(#1d1f21, 0.15),
      rgba(#1d1f21, 0.15) 1px,
      transparent 1px,
      transparent 2px
    );
    pointer-events: none;
  }
}
.terminal {
    min-height: 80vh;
}
::selection {
  background: #0080FF;
  text-shadow: none;
}
pre {
  margin: 0;
}

:root {
    --background: #1d1f21;
    --size: 1.5;
}
.self {
    transform: scale(-1, 1);
}

.flicker {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background: rgba(18, 16, 16, 0.2);
    opacity: 0;
    z-index: 1000;
    pointer-events: none;
    animation: flicker 0.12s infinite;
}
@keyframes flicker {
  0% {
    opacity: 0.552;
  }
  5% {
    opacity: 0.48287;
  }
  10% {
    opacity: 0.59134;
  }
  15.0% {
    opacity: 0.79543;
  }
  20% {
    opacity: 0.75134;
  }
  25% {
    opacity: 0.1956;
  }
  30.0% {
    opacity: 0.90687;
  }
  35% {
    opacity: 0.122;
  }
  40% {
    opacity: 0.62254;
  }
  45% {
    opacity: 0.56977;
  }
  50% {
    opacity: 0.9925;
  }
  55.0% {
    opacity: 0.55487;
  }
  60.0% {
    opacity: 0.16607;
  }
  65% {
    opacity: 0.12353;
  }
  70% {
    opacity: 0.2214;
  }
  75% {
    opacity: 0.67908;
  }
  80% {
    opacity: 0.97163;
  }
  85.0% {
    opacity: 0.1275;
  }
  90% {
    opacity: 0.37186;
  }
  95% {
    opacity: 0.24475;
  }
  100% {
    opacity: 0.37221;
  }
}
.terminal {
    text-shadow: 0 0.2rem 1rem #0c7b46;
}
.scanlines {
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background: linear-gradient(
        to bottom,
        rgba(255,255,255,0),
        rgba(255,255,255,0) 50%,
        rgba(0,0,0,.2) 70%,
        rgba(0,0,0,.6)
    );
    background-size: 100% .3rem;
    position: fixed;
    pointer-events: none;
}
.scanlines:before {
  position: absolute;
  top: 0px;
  width: 100%;
  height: 5px;
  background: #fff;
  background: linear-gradient(to bottom,
      rgba(255,0,0,0) 0%,
      rgba(255,250,250,1) 50%,
      rgba(255,255,255,0.98) 51%,
      rgba(255,0,0,0) 100%
  ); /* W3C */
  opacity: .1;
}
.scanlines:after {
  box-shadow: 0 2px 6px rgba(25,25,25,0.2),
      inset 0 1px rgba(50,50,50,0.1),
      inset 0 3px rgba(50,50,50,0.05),
      inset 0 3px 8px rgba(64,64,64,0.05),
      inset 0 -5px 10px rgba(25,25,25,0.1);
}

#term:focus-within + .scanlines:before {
  content: '';
  animation: vline calc(var(--time, 2) * 1s) linear infinite;
}
@supports (-ms-ime-align:auto) {
    .scanlines:before {
        content: '';
        animation: vline 3s linear infinite;
    }
}
@keyframes vline {
  to { transform: translate(0, 100vh)}
}
/* turn off animation */
.tv {
    height: 100vh;
    position: relative;
}
.tv.collapse {
    animation: size 2s ease-out;
    animation-fill-mode: forwards;
}
.tv.collapse:before {
    content: '';
    display: block;
    height: 100%;
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    background: #c5c8c6;
    z-index: 1;
    opacity: 0;
    animation: opacity 2s ease-out;
    animation-fill-mode: forwards;
}

@keyframes opacity {
    to { opacity: 1; }
}
@keyframes size {
    50% {
        transform: scaleX(calc(1 / var(--width)));
        opacity: 1;
    }
    98% {
        transform: scaleX(calc(1 / var(--width))) scaleY(calc(1 / var(--height)));
        opacity: 1;
    }
    100% {
        transform: scaleX(calc(1 / var(--width))) scaleY(calc(1 / var(--height)));
        opacity: 0;
    }  
}

